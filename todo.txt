Travail avec ses ficheirs : 
db\schema.rb   -> ficheir pour voir la structure de votre db (ne pas modifier ce fichier) avvec au michier de migration et aux seeds
app\views\pages -> vos view
config\routes.rb -> les routes
app\controllers -> les controlleurs
app\models -> les models
app\assets\stylesheets -> votre style


bibli : https://sites.google.com/view/tpass-bibli/g%C3%A9n%C3%A9rateur-de-code-ruby-on-rails
(aide pour les migrations)




1/ Créer une table "Products" avec les champs suivants :

name (string)
description (text)
price  (float)  
quantity (integer)
user (references)

-> docker-compose exec web rails generate scaffold Product name:string description:text price:float quantity:integer user:references --no-stylesheets

réaliser un scaffold pour générer les fichiers correspondants.
-> faire la migrations
-> docker-compose exec web rails db:migrate

afficher la liste des produits avec le nom de l'utilisateur qui les a créer.
Dans le formulaire de création de produit, afficher la liste des utilisateurs.

3/ a la place d'avoir la vue show créer une modale pour afficher le produit (modal boostrap)

2/ créer un seed avec faker pour créer 50 produits différents avec un random user

-> docker-compose exec web rails db:seed

3/ créer un champs pour filtrer les produits par nom ou produit puis par nom d'utilisateur. 
aider vous avec la gem "pg_search" https://github.com/Casecommons/pg_search







a / créer vue pour lister/editer/... les Users en copier collant les vues de products et les controlleurs

b/ n'afficher que les produits de l'utilisateur connecté dans la vue des produits

c/ sur le form injecter le user_id de l'utilisateur connecté

d/ chercher une faille qui permettrai d'afficher d'un produit non créer par l"utilisateur connecté.

e/ ajouter un champ "admin" dans le model

f/ créer une fonction général isadmin? sur la class user dans le model user qui renvoie true si admin false sinon afin que l'on puisse l'utiliser n'importe ou.

g/ créer une focntion qui renvoir la date au le bon format jj/mm/aaaa en créant un helper

f/ dans home afficher un lien vers la page des users si l'utilisateur est admin sinon afficher un lien vers la page des produits de l'utilisateur connecté.


1/ créer une vue PDf pour avoir une vue pdf du show de produit.
(installer gem):
gem "wkhtmltopdf-binary-edge"  # gestion des pdf
gem "wicked_pdf"          # gestion des pdf


2/ créer une vue pdf pour avoir une vue pdf de la liste des produits avec numérotation des pages

3/ créer un bouton et une action dans le controlleur pour augmenter tout les produits en fonction d'un input.

4/ rajouter des cases à cocher sur la listes des produits et un autre bouton pour affecter le prix qu'au produit avec un input.


Interro projet :
Créer un base de données Stocks
avec en champs :
name (string)
localite (string)
capacity (integer)

dans index stock afficher chaque stock et leur produit dedans de sorte que ce soit intuitif de voir si le stocks est remplis ou pas.
faire en sorte de pouvoir attribuer des produits aux stocks.
limiter les produits par stock. 
capacity = 30 signifie que la somme des produits.quantity ne peut pas depasser 30.
ne pas pouvoir supprimer un stock si il contient des produits.
faire une action pour pouvoir transferer tout les produits d'un stock à l'autre.






